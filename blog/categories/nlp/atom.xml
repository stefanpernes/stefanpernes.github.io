<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Nlp | Notizen]]></title>
  <link href="http://stefanpernes.github.io/blog/categories/nlp/atom.xml" rel="self"/>
  <link href="http://stefanpernes.github.io/"/>
  <updated>2015-04-16T21:16:03+02:00</updated>
  <id>http://stefanpernes.github.io/</id>
  <author>
    <name><![CDATA[Stefan Pernes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Musil's Man Without Qualities]]></title>
    <link href="http://stefanpernes.github.io/blog/2014/09/18/musils-man-without-qualities/"/>
    <updated>2014-09-18T12:41:37+02:00</updated>
    <id>http://stefanpernes.github.io/blog/2014/09/18/musils-man-without-qualities</id>
    <content type="html"><![CDATA[<p>At our DARIAH-DE cluster unconference last week we had time to develop a simple new workflow using DKPro, Jython and Gephi. We use the Apache UIMA based framework to do the heavy lifting, in this case everything up to and including named entity recognition (NER). We invoke the pipeline and process its output via a Python script.</p>

<p>Here the basic idea is to find a window within which to count occuring named entities as connected. Any two entities within that window (and if there are more, all combinations count) are taken as nodes, put together, and written as edges into a .csv file. That .csv file can be imported into Gephi in order to produce network graphs like the ones shown below [from the <a href="http://gutenberg.spiegel.de/buch/der-mann-ohne-eigenschaften-erstes-buch-7588/1">1st book</a> of Musil&rsquo;s man without qualities]:</p>

<p><a href="http://stefanpernes.github.io/images/posts/musil_paragraphs_z.png" class="fresco"><img src=/images/posts/musil_paragraphs_z.png></a></p>

<p>The paragraph segmentation above (note to self: use the DKPro built-in paragraph splitter) yields quite a complete picture of mentions, whereas the co-occurence within sentences should be indicative of a more direct connection between mentioned entities:</p>

<p><a href="http://stefanpernes.github.io/images/posts/musil_sentences_z.png" class="fresco"><img src=/images/posts/musil_sentences_z.png></a></p>

<p>As the StanfordNamedEntityRecognizer must be instructed to look for specific kinds of entities, I tried them all and apart from the &lsquo;person&rsquo; attribute, &lsquo;location&rsquo; led to the extraction of a meaningful network from that novel:</p>

<p><a href="http://stefanpernes.github.io/images/posts/musil_paragraphs_location.png" class="fresco"><img src=/images/posts/musil_paragraphs_location.png></a></p>

<p>As can be observed looking at close-ups of the network graph, NER needs to be improved - in at least two ways: to tune it for German as well as for literary texts. Another thing that can be experimented with is what segmentation(s) to use. A more theoretical approach, for example based on concepts of scene structure, might prove fruitful here - but also a little harder to implement.</p>

<p>[This is still work in progress, but some of our other recipes are online already. You can find them <a href="https://code.google.com/p/dkpro-tutorials/wiki/Jython_Tutorial">here</a>.]</p>
]]></content>
  </entry>
  
</feed>
